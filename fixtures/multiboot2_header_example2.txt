Multiboot 2 header {
  u32 magic: 0xe85250d6
  u32 arch: 0 (i386)
  u32 size: 272
  u32 checksum: 0x17adae1a
}
Multiboot 2 header tag {
  u16 type: 1 (information request)
  u16 flags: 0x0 ()
  u32 size: 96
  u32 mbi_tag_types[]: [
    0 (none)
    1 (boot cmd line)
    2 (boot loader name)
    3 (module)
    4 (basic memory info)
    5 (BIOS boot device)
    6 (memory map)
    7 (VBE info)
    8 (framebuffer info)
    9 (ELF symbols)
    10 (APM table)
    11 (EFI 32bit system table ptr)
    12 (EFI 64bit system table ptr)
    13 (SMBIOS tables)
    14 (ACPI old RSDP)
    15 (ACPI new RSDP)
    16 (networking info)
    17 (EFI memory map)
    18 (EFI boot services not terminated)
    19 (EFI 32bit image handle ptr)
    20 (EFI 64bit image handle ptr)
    21 (image load base phys addr)
  ]
}
Multiboot 2 header tag {
  u16 type: 2 (address)
  u16 flags: 0x0 ()
  u32 size: 24
  u32 header_addr: 0xcafebabe
  u32 load_addr: 0xdeadbeaf
  u32 load_end_addr: 0xdeadbabe
  u32 bss_end_addr: 0xcafebeaf
}
Multiboot 2 header tag {
  u16 type: 3 (entry address)
  u16 flags: 0x0 ()
  u32 size: 12
  u32 entry_addr: 0xcafebabe
}
Multiboot 2 header tag {
  u16 type: 4 (flags)
  u16 flags: 0x0 ()
  u32 size: 12
  u32 console_flags: 0x0 ()
}
Multiboot 2 header tag {
  u16 type: 5 (framebuffer)
  u16 flags: 0x0 ()
  u32 size: 20
  u32 width: 80
  u32 height: 25
  u32 depth: 8
}
Multiboot 2 header tag {
  u16 type: 6 (module alignment)
  u16 flags: 0x0 ()
  u32 size: 8
}
Multiboot 2 header tag {
  u16 type: 7 (EFI boot services)
  u16 flags: 0x0 ()
  u32 size: 8
}
Multiboot 2 header tag {
  u16 type: 8 (EFI i386 entry address)
  u16 flags: 0x0 ()
  u32 size: 12
  u32 entry_addr: 0xcafebabe
}
Multiboot 2 header tag {
  u16 type: 9 (EFI amd64 entry address)
  u16 flags: 0x0 ()
  u32 size: 12
  u32 entry_addr: 0xdeadbeaf
}
Multiboot 2 header tag {
  u16 type: 10 (relocatable header)
  u16 flags: 0x0 ()
  u32 size: 24
  u32 min_addr: 0xcafebabe
  u32 max_addr: 0xdeadbeaf
  u32 align: 8
  u32 preference: 1 (lowest)
}
Multiboot 2 header tag {
  u16 type: 0 (none)
  u16 flags: 0x0 ()
  u32 size: 8
}
